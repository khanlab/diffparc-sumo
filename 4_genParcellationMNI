#!/bin/bash

function usage {
 echo ""
 echo "Usage: ${0##*/}   <working dir> <in_bedpost_root> <subjids..>"
 echo "" 
 
}

if [ "$#" -lt 2 ]
then
 usage
 exit 1
fi

execpath=`dirname $0`
execpath=`realpath $execpath`


work_dir=$1
in_bedpost_root=$2
shift 2

if [ -e "$in_bedpost_root" ] 
then
in_bedpost_root=`realpath $in_bedpost_root`
fi

#source parcellate_cfg
. $parcellate_cfg


pushd $work_dir
for subj in $@
do

parc_dir=$subj/bedpost.${parcellation_name}
track_dir=$parc_dir/probtrack


if [ ! -e $track_dir/matrix_seeds_to_all_targets ]
then
 echo $track_dir/matrix_seeds_to_all_targets does not exist, running tracking:
 if [ "$legacy_dwi_proc" = 1 ]
 then
  processBedpostParcellateSeed uncorrected_denoise_unring_eddy $parcellate_cfg $subj
 else
  $execpath/processBedpostParcellateSeedfromPrepDWI $in_bedpost_root $parcellate_cfg $subj
 fi
fi


#normalize by targe volume:

 vol_csv=$parc_dir/target_volumes.csv
 rm -f $vol_csv

 name_txt=$parc_dir/target_names.txt
 rm -f $name_txt

 echo "Normalizing seed to target maps by volume of target"

 targets_file=$parc_dir/targets.txt
 #normalize seeds_to_targets by volume of target
 for target in `cat $targets_file`
 do
 
  vol=`fslstats $target -V`
  vol=${vol#[0-9]*\ }

  echo $vol >> $vol_csv
   
  name=${target##*/}
  name=${name%%.nii.gz}
  
  echo $name >> $name_txt

  in_seeds=$parc_dir/probtrack/seeds_to_${name}_resampled.nii.gz
  norm_seeds=$parc_dir/probtrack/seeds_to_${name}_resampled.normVol.nii.gz

   echo fslmaths $in_seeds -div $vol $norm_seeds
   fslmaths $in_seeds -div $vol $norm_seeds 
 
 

 done #targets









#post-processing to move to MNI space and extract left/right sides
interp_opt="-LIN"


#compute ROIs for MNI left/right hemi
dimx=`fslval $atlas/t1/t1.nii.gz dim1`
halfx=`bashcalc "scale=0; $dimx/2"`

roi_left="0 $halfx 0 -1 0 -1 0 -1"
roi_right="$((halfx+1)) -1 0 -1 0 -1 0 -1"

echo "roi_left $roi_left"
echo "roi_right $roi_right"


#warp probtrack seed to target files back to MNI
#then average and create maxprob parcellation


 subj_dir=$subj
 

#apply xfm (using linear interp) 
coreg_dir=$subj_dir/coreg/rigid_aladin_t1_$legacy_dwi_type

linreg_dir=$subj_dir/reg/affine_aladin_t1/${atlas}_${subj}
linxfm=$linreg_dir/${subj}_to_${atlas}.xfm
linxfm_inv=$linreg_dir/${atlas}_to_${subj}.xfm


xfm_dwi_t1=$coreg_dir/${legacy_dwi_type}_to_t1.xfm

if [ "$legacy_dwi_proc" = 1 ]
then
track_dir=$subj_dir/$legacy_dwi_path/bedpost.${parcellation_name}/probtrack
else
track_dir=$subj_dir/bedpost.${parcellation_name}/probtrack
fi


out_dir=$track_dir/$atlas
mkdir -p $out_dir

subj_t1=$subj_dir/t1/t1.brain.nii.gz
atlas_t1=${atlas}/t1/t1.brain.nii.gz


seed_mask=$subj/$seed_file
seed_mask_atlas=$out_dir/seedmask.nii.gz

echo reg_resample -flo $seed_mask -res $seed_mask_atlas -aff $linxfm -ref $atlas_t1 -NN 0
reg_resample -flo $seed_mask -res $seed_mask_atlas -aff $linxfm -ref $atlas_t1 -NN 0


dti_parc=$out_dir/diffusion_parcellation.masked.nii.gz
dti_parc_subj=$track_dir/diffusion_parcellation.masked.nii.gz

for track in `ls $track_dir/seeds_to_*_resampled.nii.gz`
do

target=${track##*seeds_to_}
target=${target%%.nii.gz}

track_atlas=$out_dir/seeds_to_${target}.nii.gz
if [ "$legacy_dwi_proc" = 1 ]
then
reg_resample -flo $track -res $track_atlas -aff $xfm_dwi_t1 -ref $subj_t1 -LIN
reg_resample -flo $track_atlas -res $track_atlas -aff $linxfm  -ref $atlas_t1 -LIN
else
reg_resample -flo $track -res $track_atlas -aff $linxfm -ref $atlas_t1 -LIN
fi


#mask with seed label (remove voxels outside seed region)
fslmaths $track_atlas -mas $seed_mask_atlas $track_atlas



done #track


#now create 4D and maxprob image:
 seedlist=""
for lbl_line in `cat $target_labels_txt`
do

  lbl=${lbl_line%%,*}

 
  map=$out_dir/seeds_to_${lbl}_resampled.nii.gz

  map_left=$out_dir/seeds_to_${lbl}_resampled.mask_left.nii.gz
  map_right=$out_dir/seeds_to_${lbl}_resampled.mask_right.nii.gz

  #mask with left/right  ROI:
  fslmaths $map -roi $roi_left $map_left
  fslmaths $map -roi $roi_right $map_right

  seedlist="$seedlist $map_left $map_right"

done #done targetlist

 #create map for diffusion-based parcellation 
 echo fslmerge -t $out_dir/seeds.4d.nii.gz $seedlist
 fslmerge -t $out_dir/seeds.4d.nii.gz $seedlist

 threshold=0.0001
 echo  prob4DtoMaxProb $out_dir/seeds.4d.nii.gz $threshold $dti_parc
 prob4DtoMaxProb $out_dir/seeds.4d.nii.gz $threshold $dti_parc

 #bring back to subject space
 echo reg_resample -flo $dti_parc -res $dti_parc_subj -aff $linxfm_inv -ref $subj_t1 -NN 0
 reg_resample -flo $dti_parc -res $dti_parc_subj -aff $linxfm_inv -ref $subj_t1 -NN 0
  

done  #subject

popd
exit 0
